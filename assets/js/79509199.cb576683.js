"use strict";(self.webpackChunkcasdk_docs=self.webpackChunkcasdk_docs||[]).push([[2612],{183:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var i=t(4848),s=t(8453);const a={},r="Carbon Aware WebApi",o={id:"tutorial-basics/carbon-aware-webapi",title:"Carbon Aware WebApi",description:"The Carbon Aware SDK provides an API to get the carbon intensity for a",source:"@site/docs/tutorial-basics/carbon-aware-webapi.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/carbon-aware-webapi",permalink:"/docs/tutorial-basics/carbon-aware-webapi",draft:!1,unlisted:!1,editUrl:"https://github.com/Green-Software-Foundation/carbon-aware-sdk/docs/tutorial-basics/carbon-aware-webapi.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Carbon Aware Tools",permalink:"/docs/tutorial-basics/carbon-aware-tools"},next:{title:"Containerized WebApi",permalink:"/docs/tutorial-basics/containerization"}},c={},l=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Endpoints",id:"endpoints",level:2},{value:"GET emissions/bylocation",id:"get-emissionsbylocation",level:3},{value:"GET emissions/bylocations",id:"get-emissionsbylocations",level:3},{value:"GET emissions/bylocations/best",id:"get-emissionsbylocationsbest",level:3},{value:"GET emissions/forecasts/current",id:"get-emissionsforecastscurrent",level:3},{value:"POST emissions/forecasts/batch",id:"post-emissionsforecastsbatch",level:3},{value:"GET emissions/average-carbon-intensity",id:"get-emissionsaverage-carbon-intensity",level:3},{value:"POST emissions/average-carbon-intensity/batch",id:"post-emissionsaverage-carbon-intensitybatch",level:3},{value:"GET /locations",id:"get-locations",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Autogenerate WebAPI",id:"autogenerate-webapi",level:2},{value:"Data Sources",id:"data-sources",level:2},{value:"WattTime",id:"watttime",level:3},{value:"WattTime Locations",id:"watttime-locations",level:4},{value:"WattTime Exception Handling",id:"watttime-exception-handling",level:4},{value:"Example Emissions Call Using WattTime",id:"example-emissions-call-using-watttime",level:4},{value:"ElectricityMaps",id:"electricitymaps",level:3},{value:"ElectricityMaps Locations",id:"electricitymaps-locations",level:4},{value:"ElectricityMaps Exception Handling",id:"electricitymaps-exception-handling",level:4},{value:"ElectricityMapsFree",id:"electricitymapsfree",level:3},{value:"Locations",id:"locations",level:4},{value:"Exception Handling",id:"exception-handling",level:4}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"carbon-aware-webapi",children:"Carbon Aware WebApi"})}),"\n",(0,i.jsx)(n.p,{children:"The Carbon Aware SDK provides an API to get the carbon intensity for a\ngiven location and time period. The values reported in the Green Software\nFoundation's specification for carbon intensity (Grams per Kilowatt\nHour)."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Highly Recommended"})})," - This user interface is best for when you can change\nthe code, and deploy separately. This also allows you to manage the Carbon Aware\nlogic independently of the system using it."]}),"\n",(0,i.jsx)(n.p,{children:"The WebApi replicates the CLI and SDK functionality, leveraging the same\nconfiguration and providing a REST end point with Swagger/OpenAPI definition for\nclient generation"}),"\n",(0,i.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#carbon-aware-webapi",children:"Carbon Aware WebApi"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#table-of-contents",children:"Table of Contents"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#endpoints",children:"Endpoints"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#get-emissionsbylocation",children:"GET emissions/bylocation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#get-emissionsbylocations",children:"GET emissions/bylocations"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#get-emissionsbylocationsbest",children:"GET emissions/bylocations/best"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#get-emissionsforecastscurrent",children:"GET emissions/forecasts/current"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#post-emissionsforecastsbatch",children:"POST emissions/forecasts/batch"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#get-emissionsaverage-carbon-intensity",children:"GET emissions/average-carbon-intensity"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#post-emissionsaverage-carbon-intensitybatch",children:"POST emissions/average-carbon-intensity/batch"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#get-locations",children:"GET /locations"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#error-handling",children:"Error Handling"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#autogenerate-webapi",children:"Autogenerate WebAPI"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#data-sources",children:"Data Sources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#watttime",children:"WattTime"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#watttime-locations",children:"Locations"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#watttime-exception-handling",children:"Exception Handling"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#example-emissions-call-using-watttime",children:"Example Emissions Call Using WattTime"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#electricitymaps",children:"ElectricityMaps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#electricitymaps-locations",children:"Locations"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#electricitymaps-exception-handling",children:"Exception Handling"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#electricitymapsfree",children:"ElectricityMapsFree"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#locations",children:"Locations"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#exception-handling",children:"Exception Handling"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"endpoints",children:"Endpoints"}),"\n",(0,i.jsx)(n.h3,{id:"get-emissionsbylocation",children:"GET emissions/bylocation"}),"\n",(0,i.jsx)(n.p,{children:"This endpoint calculates the observed emission data by location for a specified\ntime period."}),"\n",(0,i.jsx)(n.p,{children:"Location is a required parameter and is name of the data region for the\nconfigured Cloud provider. If time period is not provided, it retrieves\navailable data until the current time."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"https://<server_name>/emissions/bylocation?location=useast&time=2022-01-01&toTime=2022-05-17\n"})}),"\n",(0,i.jsx)(n.p,{children:"The response is an array of EmissionsData objects that contains the location,\ntime and the rating in g/kWh"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "location": "eastus",\n    "time": "2022-05-17T20:45:11.5092741+00:00",\n    "rating": 70\n  }\n]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"get-emissionsbylocations",children:"GET emissions/bylocations"}),"\n",(0,i.jsx)(n.p,{children:"This endpoint calculates the observed emission data by an array of locations for\na specified time period"}),"\n",(0,i.jsx)(n.p,{children:"Location is a required parameter and is an array of the names of the data region\nfor the configured Cloud provider. If time period is not provided, it retrieves\nall the data until the current time."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"https://<server_name>/emissions/bylocations?locations=eastus&locations=westus&time=2022-01-01&toTime=2022-05-17\n"})}),"\n",(0,i.jsx)(n.p,{children:"The response is an array of EmissionsData objects that contains the location,\ntime and the rating in g/kWh."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "location":"eastus"\n    "time":"2022-05-17T20:45:11.5092741+00:00",\n    "rating":70\n  },\n  {\n    "location":"westus"\n    "time":"2022-05-17T20:45:11.5092741+00:00",\n    "rating":64\n  }\n]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"get-emissionsbylocationsbest",children:"GET emissions/bylocations/best"}),"\n",(0,i.jsx)(n.p,{children:"This endpoint calculates the best observed emission data by an array of\nlocations for a specified time period"}),"\n",(0,i.jsx)(n.p,{children:"Location is a required parameter and is an array of the names of the data region\nfor the configured Cloud provider. If time period is not provided, it retrieves\nall the data until the current time."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"https://<server_name>/emissions/bylocations/best?locations=eastus&locations=westus&time=2022-01-01&toTime=2022-05-17\n"})}),"\n",(0,i.jsx)(n.p,{children:"The response is an array of EmissionsData objects that contains the location,\ntime and the rating in g/kWh."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "location":"eastus"\n    "time":"2022-05-17T20:45:11.5092741+00:00",\n    "rating":70\n  }\n]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"get-emissionsforecastscurrent",children:"GET emissions/forecasts/current"}),"\n",(0,i.jsx)(n.p,{children:'This endpoint fetches only the most recently generated forecast for all provided\nlocations. It uses the "dataStartAt" and "dataEndAt" parameters to scope the\nforecasted data points (if available for those times). If no start or end time\nboundaries are provided, the entire forecast dataset is used. The scoped data\npoints are used to calculate average carbon intensities of the\nspecified "windowSize" and the optimal carbon intensity window is\nidentified.'}),"\n",(0,i.jsx)(n.p,{children:"The forecast data represents what the data source predicts future\ncarbon intesity values to be, not actual measured emissions data (as future\nvalues cannot be known)."}),"\n",(0,i.jsx)(n.p,{children:"This endpoint is useful for determining if there is a more carbon-optimal time\nto use electicity predicted in the future."}),"\n",(0,i.jsx)(n.p,{children:"Parameters:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"location"}),": This is a required parameter and is an array of the names of the\ndata region for the configured Cloud provider."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"dataStartAt"}),": Start time boundary of the current forecast data points.\nIgnores current forecast data points before this time. Must be within the\nforecast data point timestamps. Defaults to the earliest time in the forecast\ndata."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"dataEndAt"}),": End time boundary of the current forecast data points. Ignores\ncurrent forecast data points after this time. Must be within the forecast\ndata point timestamps. Defaults to the latest time in the forecast data. If\nneither ",(0,i.jsx)(n.code,{children:"dataStartAt"})," nor ",(0,i.jsx)(n.code,{children:"dataEndAt"})," are provided, all forecasted data\npoints are used in calculating the optimal carbon intensity window."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"windowSize"}),": The estimated duration (in minutes) of the workload. Defaults\nto the duration of a single forecast data point."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"https://<server_name>/emissions/forecasts/current?location=northeurope&dataStartAt=2022-07-19T14:00:00Z&dataEndAt=2022-07-20T04:38:00Z&windowSize=10\n"})}),"\n",(0,i.jsx)(n.p,{children:"The response is an array of forecasts (one per requested location) with their\noptimal carbon intensity windows."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "requestedAt": "2022-07-19T13:37:49+00:00",\n    "generatedAt": "2022-07-19T13:35:00+00:00",\n    "location": "northeurope",\n    "dataStartAt": "2022-07-19T14:00:00Z",\n    "dataEndAt": "2022-07-20T04:38:00Z",\n    "windowSize": 10,\n    "optimalDataPoint": {\n      "location": "IE",\n      "timestamp": "2022-07-19T18:45:00+00:00",\n      "duration": 10,\n      "value": 448.4451043375\n    },\n    "forecastData": [\n      {\n        "location": "IE",\n        "timestamp": "2022-07-19T14:00:00+00:00",\n        "duration": 10,\n        "value": 532.02293146\n      },\n      ...\n      {\n        "location": "IE",\n        "timestamp": "2022-07-20T04:25:00+00:00",\n        "duration": 10,\n        "value": 535.7318741001667\n      }\n    ]\n  }\n]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"post-emissionsforecastsbatch",children:"POST emissions/forecasts/batch"}),"\n",(0,i.jsx)(n.p,{children:"This endpoint takes a batch of requests for historical forecast data, fetches\nthem, and calculates the optimal carbon intensity windows for each\nusing the same parameters available to the '/emissions/forecasts/current'\nendpoint."}),"\n",(0,i.jsx)(n.p,{children:"This endpoint is useful for back-testing what one might have done in the past,\nif they had access to the current forecast at the time."}),"\n",(0,i.jsx)(n.p,{children:"Parameters:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["requestedForecasts: Array of requested forecasts. Each requested forecast\ncontains","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"requestedAt"}),": This is a required parameter and is the historical time used\nto fetch the most recent forecast as of that time."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"location"}),": This is a required parameter and is the name of the data region\nfor the configured Cloud provider."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"dataStartAt"}),": Start time boundary of the forecast data points. Ignores\nforecast data points before this time. Must be within the forecast data\npoint timestamps. Defaults to the earliest time in the forecast data."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"dataEndAt"}),": End time boundary of the forecast data points. Ignores\nforecast data points after this time. Must be within the forecast data\npoint timestamps. Defaults to the latest time in the forecast data."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"windowSize"}),": The estimated duration (in minutes) of the workload. Defaults\nto the duration of a single forecast data point"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["If neither ",(0,i.jsx)(n.code,{children:"dataStartAt"})," nor ",(0,i.jsx)(n.code,{children:"dataEndAt"})," are provided, all forecasted data\npoints are used in calculating the optimal carbon intensity window."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "location": "eastus",\n    "dataStartAt": "2022-06-01T14:00:00Z",\n    "dataEndAt": "2022-06-01T18:00:00Z",\n    "windowSize": 30,\n    "requestedAt": "2022-06-01T12:01:00Z"\n  },\n  {\n    "location": "westus",\n    "dataStartAt": "2022-06-13T08:00:00Z",\n    "dataEndAt": "2022-06-13T10:00:00Z",\n    "windowSize": 30,\n    "requestedAt": "2022-06-13T6:05:00Z"\n  }\n]\n'})}),"\n",(0,i.jsx)(n.p,{children:"The response is an array of forecasts (one per requested location) with their\noptimal carbon intensity windows."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "generatedAt": "2022-06-01T12:00:00+00:00",\n    "optimalDataPoint": {\n      "location": "IE",\n      "timestamp": "2022-06-01T16:45:00+00:00",\n      "duration": 10,\n      "value": 448.4451043375\n    },\n    "forecastData": [ ... ] // all relevant forecast data points\n    "requestedAt": "2022-06-01T12:01:00"\n    "location": "eastus",\n    "dataStartAt": "2022-06-01T14:00:00Z",\n    "dataEndAt": "2022-06-01T18:00:00Z",\n    "windowSize": 30,\n  },\n  {\n    "generatedAt": "2022-06-13T06:05:00+00:00",\n    "optimalDataPoint": {\n      "location": "IE",\n      "timestamp": "2022-06-13T09:25:00+00:00",\n      "duration": 10,\n      "value": 328.178478\n    },\n    "forecastData": [ ... ] // all relevant forecast data points\n    "requestedAt": "2022-06-13T06:05:00"\n    "location": "westus",\n    "dataStartAt": "2022-06-13T08:00:00Z",\n    "dataEndAt": "2022-06-13T10:00:00Z",\n    "windowSize": 30,\n  }\n]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"get-emissionsaverage-carbon-intensity",children:"GET emissions/average-carbon-intensity"}),"\n",(0,i.jsx)(n.p,{children:"This endpoint retrieves the measured carbon intensity data between the time\nboundaries and calculates the average carbon intensity during that period.\nLocation is a required parameter and is the name of the data region for the\nconfigured Cloud provider."}),"\n",(0,i.jsx)(n.p,{children:"This endpoint is useful for reporting the measured carbon intensity for a\nspecific time period in a specific location."}),"\n",(0,i.jsx)(n.p,{children:"Parameters:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"location"}),": This is a required parameter and is the string name of the data\nregion for the configured Cloud provider."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"startTime"}),": The time at which the workload and corresponding carbon usage\nbegins."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"endTime"}),": The time at which the workload and corresponding carbon usage\nends."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"https://<server_name>/emissions/average-carbon-intensity?location=eastus&startTime=2022-07-19T14:00:00Z&endTime=2022-07-19T18:00:00Z\n"})}),"\n",(0,i.jsx)(n.p,{children:"The response is a single object that contains the information about the request\nand the average carbon intensity"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "location": "eastus",\n  "startTime": "2022-07-19T14:00:00Z",\n  "endTime": "2022-07-19T18:00:00Z",\n  "carbonIntensity": 345.434\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"post-emissionsaverage-carbon-intensitybatch",children:"POST emissions/average-carbon-intensity/batch"}),"\n",(0,i.jsx)(n.p,{children:"This endpoint takes an array of request objects, each with their own location\nand time boundaries, and calculates the average carbon intensity for that\nlocation and time period."}),"\n",(0,i.jsx)(n.p,{children:"This endpoint only supports batching across a single location with different\ntime boundaries. If multiple locations are provided, an error is returned. For\neach item in the request array, the application returns a corresponding object\ncontaining the location, time boundaries, and average carbon intensity."}),"\n",(0,i.jsx)(n.p,{children:"Parameters:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["requestedCarbonIntensities: Array of requested carbon intensities. Each\nrequested carbon intensity contains","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"location"}),": This is a required parameter and is the name of the data region\nfor the configured Cloud provider."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"startTime"}),": The time at which the workflow we are requesting carbon\nintensity for started."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"endTime"}),": The time at which the workflow we are requesting carbon\nintensity for ended."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "location": "eastus",\n    "startTime": "2022-05-01T14:00:00",\n    "endTime": "2022-05-01T18:00:00"\n  },\n  {\n    "location": "eastus",\n    "startTime": "2022-06-01T14:00:00",\n    "endTime": "2022-06-01T18:00:00"\n  },\n  {\n    "location": "eastus",\n    "startTime": "2022-07-01T14:00:00",\n    "endTime": "2022-07-01T18:00:00"\n  }\n]\n'})}),"\n",(0,i.jsx)(n.p,{children:"The response is an array of CarbonIntensityDTO objects which each have a\nlocation, start time, end time, and the average carbon intensity over\nthat time period."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "carbonIntensity": 32.935208333333335,\n    "location": "eastus",\n    "startTime": "2022-05-01T14:00:00-04:00",\n    "endTime": "2022-05-01T18:00:00-04:00"\n  },\n  {\n    "carbonIntensity": 89.18215277777779,\n    "location": "eastus",\n    "startTime": "2022-06-01T14:00:00-04:00",\n    "endTime": "2022-06-01T18:00:00-04:00"\n  },\n  {\n    "carbonIntensity": 10.416875,\n    "location": "eastus",\n    "startTime": "2022-07-01T14:00:00-04:00",\n    "endTime": "2022-07-01T18:00:00-04:00"\n  }\n]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"get-locations",children:"GET /locations"}),"\n",(0,i.jsxs)(n.p,{children:["This endpoint lists all the supported locations that the datasources potentially\ncan have access to. This information is coming from the ",(0,i.jsx)(n.code,{children:"location-source/json"}),"\nfiles, that contain dictionaries in the form of ",(0,i.jsx)(n.code,{children:"<A Location key name, GeoCoordinates>"}),", for instance:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "eastus": {\n    "Latitude": 37.3719,\n    "Longitude": -79.8164,\n    "Name": "eastus"\n  },\n  ...\n  "switzerlandnorth":{\n    "Latitude": 47.451542,\n    "Longitude": 8.564572,\n    "Name": "switzerlandnorth"\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Emissions"})," and ",(0,i.jsx)(n.code,{children:"Forecasts"})," endpoints would use the location's ",(0,i.jsx)(n.code,{children:"key"})," name\nreturned by the ",(0,i.jsx)(n.code,{children:"emssions/locations"})," endpoint."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note"}),": If there is ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"a location key name"})})," collision while loading two or\nmore location json files and there is no ",(0,i.jsx)(n.code,{children:"LocationDataSourcesConfiguration"}),"\n",(0,i.jsx)(n.code,{children:"Prefix"})," and/or ",(0,i.jsx)(n.code,{children:"Delimiter"})," settings, the system would change the collision key\nname by appending an underscore character and a sequence number to it (i.e.\n",(0,i.jsx)(n.code,{children:"<key name>"}),(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"_seqnumber"})}),"). For instance two location json files having\n",(0,i.jsx)(n.code,{children:"swedencentral"})," as key, after loading, it would become:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "swedencentral": {\n    "Latitude": 60.67488,\n    "Longitude": 17.14127,\n    "Name":"swedencentral"\n  },\n  ...\n  "swedencentral_1": { // key collision. key renamed.\n    "Latitude": null,\n    "Longitude": null,\n    "Name": "SE"\n  },\n  ...\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["If there is a third file with the same key name, it would be ",(0,i.jsx)(n.code,{children:"swedencentral_2"}),"\nand so on. This information is not persisted, but now the user can make requests\nusing ",(0,i.jsx)(n.code,{children:"swedencentral"})," and/or ",(0,i.jsx)(n.code,{children:"swedencentral_1"}),". Also there are log ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"warning"})}),"\nentries when this scenerario occurs to help the user to understand what key\nrenaming happened."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"warn: Location key swedencentral from ... already exists. Creating new key.\n...\nwarn: New key swedencentral_1 generated from swedencentral\nCarbonAware.LocationSources.LocationSource: Warning: New key swedencentral_1 generated from swedencentral\n"})}),"\n",(0,i.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsxs)(n.p,{children:["The WebAPI leveraged the\n",(0,i.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/aspnet/core/mvc/controllers/filters?view=aspnetcore-8.0",children:".Net controller filter pipeline"}),"\nto ensure that all requests respond with a consistent JSON schema."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://docs.microsoft.com/en-us/aspnet/core/mvc/controllers/filters/_static/filter-pipeline-2.png?view=aspnetcore-8.0",alt:".Net controller filter pipeline image"})}),"\n",(0,i.jsxs)(n.p,{children:['Controllers are responsible for managing the "Success" responses. If an error\noccurs in the WebAPI code and an unhandled exception is thrown, the\n',(0,i.jsx)(n.a,{href:"./Filters/HttpResponseExceptionFilter.cs",children:"custom Exception Filter"})," will manage\nconverting that exception into the appropriate JSON response. NOTE: The\nException Filter is only used for unhandled exceptions. If the exception is\ncaught and handled by the WebAPI code, the controller will continue to manage\nthe response."]}),"\n",(0,i.jsxs)(n.p,{children:["The .Net framework will automatically respond to validation errors with a\n",(0,i.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.validationproblemdetails?view=aspnetcore-8.0",children:"ValidationProblemDetails"}),"\nobject. Using the Exception Filter class enables the WebAPI to consistently\nrespond with the ",(0,i.jsx)(n.code,{children:"ValidationProblemDetails"})," error schema in all error cases and\ntake advantage of error handling automatically provided by the framework."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"WebAPI Error Handling Flow Chart",src:t(2413).A+"",width:"978",height:"724"})}),"\n",(0,i.jsx)(n.h2,{id:"autogenerate-webapi",children:"Autogenerate WebAPI"}),"\n",(0,i.jsx)(n.p,{children:"Using the following steps, it is possible to get the CarbonAware WebApi OpenAPI\nspecification"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Make sure the current directory is ",(0,i.jsx)(n.code,{children:"<path to project root>/src/"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"dotnet restore\ncd CarbonAware.WebApi/src\ndotnet tool restore\ndotnet build --configuration Release --no-restore\ndotnet tool run swagger tofile --output ./wwwroot/api/v1/swagger.yaml --yaml bin/Release/net8.0/CarbonAware.WebApi.dll v1\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"CarbonAware.WebApi/src/wwwroot/api/v1/swagger.yaml"})," file contains the supported\nOpenApi specification."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Use for instance ",(0,i.jsx)(n.a,{href:"https://editor.swagger.io",children:"swagger editor"})," to see and try\nthe endpoint routes."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"data-sources",children:"Data Sources"}),"\n",(0,i.jsx)(n.h3,{id:"watttime",children:"WattTime"}),"\n",(0,i.jsx)(n.h4,{id:"watttime-locations",children:"WattTime Locations"}),"\n",(0,i.jsxs)(n.p,{children:["Each WattTime emissions data point is associated with a particular named\nbalancing authority. For transparency, this value is also used in\n",(0,i.jsx)(n.code,{children:"EmissionsData"})," response objects. It is not overwritten to match the named\ndatacenter provided by any request."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:'"A balancing authority ensures, in real time, that power system demand and\nsupply are finely balanced. This balance is needed to maintain the safe and\nreliable operation of the power system. If demand and supply fall out of\nbalance, local or even wide-area blackouts can result."'}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"https://www.eia.gov/todayinenergy/detail.php?id=27152",children:"this post"})," on\nbalancing authories from the EIA to learn more."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"watttime-exception-handling",children:"WattTime Exception Handling"}),"\n",(0,i.jsxs)(n.p,{children:["If WattTime responds with a 4XX or 5XX status code the WattTime Data Source will\nforward the response code and message back to the caller. Refer to the\n",(0,i.jsx)(n.a,{href:"https://www.watttime.org/api-documentation/",children:"current WattTime documentation"}),"\nfor the most up-to-date information about possible error codes."]}),"\n",(0,i.jsx)(n.h4,{id:"example-emissions-call-using-watttime",children:"Example Emissions Call Using WattTime"}),"\n",(0,i.jsxs)(n.p,{children:["The swimlanes diagram below follows an example request for emissions data using\nWattTime as the data source provider. In this diagram, the ",(0,i.jsx)(n.em,{children:"Client"})," is a user of\nthe SDK and the ",(0,i.jsx)(n.em,{children:"WattTimeService"})," is the ",(0,i.jsx)(n.a,{href:"https://www.wattime.org",children:"WattTime"}),"\nAPI."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"webapi to watttime flow diagram",src:t(6340).A+"",width:"1300",height:"1034"})}),"\n",(0,i.jsx)(n.h3,{id:"electricitymaps",children:"ElectricityMaps"}),"\n",(0,i.jsx)(n.h4,{id:"electricitymaps-locations",children:"ElectricityMaps Locations"}),"\n",(0,i.jsxs)(n.p,{children:["Each ElectricityMaps emissions data point is associated with a particular named\nzone. While the ElectricityMaps endpoint supports calling with lat/long\ngeoposition as well, the result will always be a corresponding zone name. They\nprovide a\n",(0,i.jsx)(n.a,{href:"https://static.electricitymaps.com/api/docs/index.html#zones",children:"route on their API"}),"\nwhich can be queried to list all the zone names you have access to given your\ntoken"]}),"\n",(0,i.jsx)(n.h4,{id:"electricitymaps-exception-handling",children:"ElectricityMaps Exception Handling"}),"\n",(0,i.jsxs)(n.p,{children:["If ElectricityMaps responds with a 4XX or 5XX status code the ElectricityMaps\nData Source will forward the response code and message back to the caller. Refer\nto the\n",(0,i.jsx)(n.a,{href:"../src/CarbonAware.DataSources/CarbonAware.DataSources.ElectricityMaps/src/Client/ElectricityMapsClientHttpException.cs",children:"ElectricityMapsHttpClientException"}),"\nclass for documentation on expected error codes."]}),"\n",(0,i.jsx)(n.h3,{id:"electricitymapsfree",children:"ElectricityMapsFree"}),"\n",(0,i.jsx)(n.h4,{id:"locations",children:"Locations"}),"\n",(0,i.jsxs)(n.p,{children:["Each ElectricityMapsFree emissions data point is associated with a particular\nnamed country code. While the ElectricityMapsFree endpoint supports calling with\nlat/long geoposition as well, the result will always be a corresponding country\ncode.\nThey provide a\n",(0,i.jsx)(n.a,{href:"https://static.electricitymaps.com/api/docs/index.html#zones",children:"route on their parent API (ElectricityMaps)"}),"\nwhich can be queried to list all the country codes you have access to given your\ntoken."]}),"\n",(0,i.jsx)(n.h4,{id:"exception-handling",children:"Exception Handling"}),"\n",(0,i.jsxs)(n.p,{children:["If ElectricityMapsFree responds with a 4XX or 5XX status code the\nElectricityMapsFree Data Source will forward the response code and message back\nto the caller. Refer to the\n",(0,i.jsx)(n.a,{href:"../src/CarbonAware.DataSources/CarbonAware.DataSources.ElectricityMapsFree/src/Client/ElectricityMapsFreeClientHttpException.cs",children:"ElectricityMapsFreeHttpClientException"}),"\nclass for documentation on expected error codes."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},2413:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/web-api-error-handling-flow-9c1b310535069274a42b39288c410b73.png"},6340:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/webapi-swimlanes-98813b02d7bd1d628ed4b55834ba443f.png"},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var i=t(6540);const s={},a=i.createContext(s);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);