"use strict";(self.webpackChunkcasdk_docs=self.webpackChunkcasdk_docs||[]).push([[1285],{6059:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var t=a(4848),s=a(8453);const i={},r="Packaging the Carbon Aware SDK",c={id:"tutorial-extras/packaging",title:"Packaging the Carbon Aware SDK",description:"With the addition of the C# Client Library as a way to consume the Carbon Aware",source:"@site/docs/tutorial-extras/packaging.md",sourceDirName:"tutorial-extras",slug:"/tutorial-extras/packaging",permalink:"/docs/tutorial-extras/packaging",draft:!1,unlisted:!1,editUrl:"https://github.com/Green-Software-Foundation/carbon-aware-sdk/docs/tutorial-extras/packaging.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Linting",permalink:"/docs/tutorial-extras/linting"},next:{title:"Architecture",permalink:"/docs/category/architecture"}},o={},l=[{value:"Included Projects",id:"included-projects",level:2},{value:"Included Scripts",id:"included-scripts",level:2},{value:"Running the packaging scripts",id:"running-the-packaging-scripts",level:3},{value:"SDK Configuration",id:"sdk-configuration",level:2},{value:"ElectricityMaps",id:"electricitymaps",level:3},{value:"WattTime",id:"watttime",level:3},{value:"Json",id:"json",level:3},{value:"Use Package with Dependency Injection",id:"use-package-with-dependency-injection",level:2},{value:"Console App Sample",id:"console-app-sample",level:2},{value:"Run the Sample Console App",id:"run-the-sample-console-app",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"packaging-the-carbon-aware-sdk",children:"Packaging the Carbon Aware SDK"})}),"\n",(0,t.jsxs)(n.p,{children:["With the addition of the C# Client Library as a way to consume the Carbon Aware\nSDK, we have also added ",(0,t.jsx)(n.a,{href:"../scripts/package/",children:"powershell scripts"})," to package the\nlibrary, and have included a sample ",(0,t.jsx)(n.a,{href:"../samples/lib-integration/",children:"Console App"}),"\nshowing how the package can be consumed."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#packaging-the-carbon-aware-sdk",children:"Packaging the Carbon Aware SDK"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#included-projects",children:"Included Projects"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#included-scripts",children:"Included Scripts"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#running-the-packaging-scripts",children:"Running the packaging scripts"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#sdk-configuration",children:"SDK Configuration"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#electricitymaps",children:"ElectricityMaps"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#watttime",children:"WattTime"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#json",children:"Json"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#use-package-with-dependency-injection",children:"Use Package with Dependency Injection"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#console-app-sample",children:"Console App Sample"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#run-the-sample-console-app",children:"Run the Sample Console App"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"included-projects",children:"Included Projects"}),"\n",(0,t.jsx)(n.p,{children:"The current package include 8 projects from the SDK:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:'"GSF.CarbonAware"'}),"\n",(0,t.jsx)(n.li,{children:'"CarbonAware"'}),"\n",(0,t.jsx)(n.li,{children:'"CarbonAware.DataSources.ElectricityMaps"'}),"\n",(0,t.jsx)(n.li,{children:'"CarbonAware.DataSources.Json"'}),"\n",(0,t.jsx)(n.li,{children:'"CarbonAware.DataSources.Registration"'}),"\n",(0,t.jsx)(n.li,{children:'"CarbonAware.DataSources.WattTime"'}),"\n",(0,t.jsx)(n.li,{children:'"CarbonAware.LocationSources"'}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["These 8 projects enable users of the library to consume the current endpoints\nexposed by the library. The package that needs to be added to a new C# project\nis ",(0,t.jsx)(n.code,{children:"GSF.CarbonAware"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"included-scripts",children:"Included Scripts"}),"\n",(0,t.jsx)(n.p,{children:"There are 2 scripts included to help the packaging process"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"create_packages.ps1 <dotnet_solution> <package_destination>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"add_packages.ps1 <dotnet_project> <package_destination>"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../scripts/package/create_packages.ps1",children:(0,t.jsx)(n.code,{children:"create_packages"})})," script is called\nwith 2 parameters: the CarbonAwareSDK dotnet solution file (",(0,t.jsx)(n.code,{children:".sln"}),") path, and\nthe output directory destination for the package. The\n",(0,t.jsx)(n.a,{href:"../scripts/package/add_packages.ps1",children:(0,t.jsx)(n.code,{children:"add_packages"})})," script is also called with\n2 parameters: the target project file (",(0,t.jsx)(n.code,{children:".csproj"}),") path, and the package\ndestination path."]}),"\n",(0,t.jsxs)(n.p,{children:["To see a working example of both scripts being invoked, you can look at the\ngithub action detailed in\n",(0,t.jsx)(n.a,{href:"../.github/workflows/build-packages.yaml",children:"build-packages.yaml"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"running-the-packaging-scripts",children:"Running the packaging scripts"}),"\n",(0,t.jsx)(n.p,{children:"The packaging scripts can be run inside a VS Code dev container defined in this\nproject. When running in the dev container you will need:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.docker.com/products/docker-desktop/",children:"Docker Desktop"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://code.visualstudio.com/",children:"VSCode"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers",children:"Remote Containers extension for VSCode"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Alternatively you can run in your local environment using the\n",(0,t.jsx)(n.a,{href:"https://dotnet.microsoft.com/en-us/download/dotnet/8.0",children:".NET Core 8.0 SDK"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"sdk-configuration",children:"SDK Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["The configuration needed to connect to WattTime, ElectricityMaps, or Json data sources can be managed using environment variables or appsettings.\nMore information on data source configuration can be found ",(0,t.jsx)(n.a,{href:"/docs/tutorial-extras/configuration#datasources",children:"here"})]}),"\n",(0,t.jsx)(n.h3,{id:"electricitymaps",children:"ElectricityMaps"}),"\n",(0,t.jsxs)(n.p,{children:["Below are the environment variables needed to set up the ",(0,t.jsx)(n.strong,{children:"ElectricityMaps"})," data source."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export DataSources__EmissionsDataSource=ElectricityMaps\nexport DataSources__ForecastDataSource=ElectricityMaps\nexport DataSources__Configurations__ElectricityMaps__Type=ElectricityMaps\nexport DataSources__Configurations__ElectricityMaps__APITokenHeader=[ElectricityMaps APITokenHeader]\nexport DataSources__Configurations__ElectricityMaps__APIToken=[ElectricityMaps APIToken]`\n"})}),"\n",(0,t.jsx)(n.h3,{id:"watttime",children:"WattTime"}),"\n",(0,t.jsxs)(n.p,{children:["Below are the environment variables needed to set up the ",(0,t.jsx)(n.strong,{children:"WattTime"})," data source."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export DataSources__EmissionsDataSource=WattTime`\nexport DataSources__ForecastDataSource=WattTime`\nexport DataSources__Configurations__WattTime__Type=WattTime`\nexport DataSources__Configurations__WattTime__Username=[WattTime Username]`\nexport DataSources__Configurations__WattTime__Password=[WattTime Password]`\nexport DataSources__Configurations__WattTime__BaseURL="https://api2.watttime.org/v2/"`\n'})}),"\n",(0,t.jsx)(n.h3,{id:"json",children:"Json"}),"\n",(0,t.jsxs)(n.p,{children:["Below is the environment variable needed to set up the ",(0,t.jsx)(n.strong,{children:"Json"})," data source."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export DataSources__EmissionsDataSource=Json`\nexport DataSources__Configurations__Json__Type=Json`\nexport DataSources__Configurations__Json__DataFileLocation="test-data-azure-emissions.json"`\n'})}),"\n",(0,t.jsx)(n.h2,{id:"use-package-with-dependency-injection",children:"Use Package with Dependency Injection"}),"\n",(0,t.jsxs)(n.p,{children:["In order to get access to the ",(0,t.jsx)(n.a,{href:"/docs/architecture/c-sharp-client-library#handlers",children:"handlers"})," in the library, a common practice with C# is through ",(0,t.jsx)(n.code,{children:"Microsoft.Extensions.DependencyInjection"})," extensions. This way the whole life cycle of the handler instance is managed by the container\u2019s framework, and it would help to isolate the concrete implementation from the user facing interface. For instance, a consumer would be able to call extensions as:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c#",children:"// Using DI Services (Emissions) to register GSF SDK library\nservices.AddEmissionsServices(configuration);\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c#",children:"// An application Consumer construct should inject a GSF handler like the following example\nclass ConsumerClass(IEmissionsHandler handler, ILogger<ConsumerClass> logger)\n{\n    ....\n    this._handler = handler;\n    this._logger = logger;\n    ....\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"And the usage of a method for IEmissionsHandler"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c#",children:"async Task<double> GetRating()\n{\n    ...\n    return await this._handler.GetAverageCarbonIntensity(\u2026);\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Another functionality of the application could just do Forecast data. So, it\nwould be a matter of following the same pattern:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c#",children:"// Using DI Services (Forecast) to register GSF SDK library\nservices.AddForecastServices(configuration);\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c#",children:"class ForecastApp(IForecastHandler handler)\n{\n    ...\n    this._handler = handler;\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"And the usage of a method for IForecastHandler:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c#",children:"async Task<EmissionsData> GetOptimal(\u2026)\n{\n    ...\n    return await this._handler.GetCurrentAsync()...).OptimalDataPoints.First();\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"This way it would fit within the same stack as the rest of the SDK is\nimplemented. Also, it would be easier to integrate later when the current\nconsumers (CLI/WebApi) should be moved to use the library."}),"\n",(0,t.jsx)(n.h2,{id:"console-app-sample",children:"Console App Sample"}),"\n",(0,t.jsxs)(n.p,{children:["There is a sample console app in the\n",(0,t.jsx)(n.a,{href:"../samples/lib-integration/ConsoleApp/",children:"lib integration folder"})," to demonstrate\npackage creation and interaction with Carbon Aware SDK."]}),"\n",(0,t.jsx)(n.h3,{id:"run-the-sample-console-app",children:"Run the Sample Console App"}),"\n",(0,t.jsx)(n.p,{children:"In order to build and run the app, all the dependent packages need to be created\nfirst and then imported in the app. Follow the steps below to run the sample\nconsole app -"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Run the ",(0,t.jsx)(n.a,{href:"#included-scripts",children:"script commands"})," to create the packages and add\nthem into the app."]}),"\n",(0,t.jsxs)(n.li,{children:["Create the ",(0,t.jsx)(n.a,{href:"#sdk-configuration",children:"environment variables"})," to connect to the\nWattTime or Json data sources."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>c});var t=a(6540);const s={},i=t.createContext(s);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);